<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <style type="text/tailwindcss">
        @theme {
            --color-primary-purple: #6a0dad;
            --color-primary-purple-dark: #5a0a9d;
        }
        /* Custom styles for map display */
        .map-image-container {
            position: relative;
            width: 700px; /* Adjust as needed */
            height: 500px; /* Adjust as needed */
            overflow: hidden;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .map-image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .activity-marker {
            position: absolute;
            width: 35px; /* Pin size */
            height: 35px; /* Pin size */
            background-image: url('/img/location_pin_red.png'); /* Red pin for student view */
            background-size: cover;
            transform: translate(-50%, -90%);
            cursor: pointer;
            z-index: 10;
        }
        .activity-info-popup {
            position: absolute;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            padding: 10px 15px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            z-index: 20;
            display: none;
            transform: translate(15px, -110%); /* Position above and to the right of marker */
            min-width: 180px;
            pointer-events: none; /* Allow clicks through popup */
            font-size: 0.9em;
            color: #333;
        }
        .activity-info-popup strong {
            display: block;
            margin-bottom: 4px;
        }

        .activity-list li .pin-icon {
            width: 20px;
            height: 20px;
            background-image: url('/img/location_pin_red.png'); /* Small red pin icon for list */
            background-size: cover;
            flex-shrink: 0;
        }
    </style>
    <title>Peta Kampus</title>
</head>
<body class="bg-gray-100 flex">
    <%- include('../partials/sidebar_mahasiswa') %>
    <div class="ml-64 flex-1 p-8">
        <h1 class="text-3xl font-bold mb-6 text-gray-800">Peta Universitas Andalas</h1>

        <div class="flex space-x-8">
            <div id="campusMap" class="map-image-container">
                <img src="/public/images/peta_unand.jpeg" alt="Peta Universitas Andalas" class="w-full h-full object-cover">
                </div>

            <div class="flex-1 bg-white rounded-xl shadow-md p-6 max-w-xs">
                <h2 class="text-2xl font-semibold text-gray-800 mb-4">Activity</h2>
                <ul class="space-y-4">
                    <% activities.forEach(activity => { %>
                        <li data-id="<%= activity.id %>" data-x="<%= activity.coords.x %>" data-y="<%= activity.coords.y %>"
                            class="bg-gray-50 p-4 rounded-lg shadow-sm flex items-center space-x-3 cursor-pointer hover:bg-gray-100 transition-colors">
                            <div class="pin-icon"></div>
                            <div class="flex-1">
                                <p class="font-semibold text-gray-800"><%= activity.title %></p>
                                <p class="text-gray-600 text-sm"><%= activity.waktu %></p>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            </div>
        </div>
    </div>

    <script>
        const activities = <%- JSON.stringify(activities) %>;
        const campusMap = document.getElementById('campusMap');
        const activityList = document.getElementById('activityList');
        const mapImage = campusMap.querySelector('img');

        function renderMarkers() {
            campusMap.querySelectorAll('.activity-marker').forEach(marker => marker.remove());
            campusMap.querySelectorAll('.activity-info-popup').forEach(popup => popup.remove());

            activities.forEach(activity => {
                const marker = document.createElement('div');
                marker.className = 'activity-marker';
                marker.style.left = `${activity.coords.x}px`;
                marker.style.top = `${activity.coords.y}px`;
                marker.dataset.id = activity.id;

                const popup = document.createElement('div');
                popup.className = 'activity-info-popup';
                // Example content, adapt for actual building info from your data
                // You might need to add a 'description' or 'buildingInfo' field to your activities data
                popup.innerHTML = `<strong>${activity.title}</strong><br>Waktu: ${activity.waktu}<br>Gedung D merupakan salah satu gedung belajar yang terdapat di Universitas Andalas`;
                
                popup.style.left = `${activity.coords.x}px`;
                popup.style.top = `${activity.coords.y}px`;

                let timeoutId;
                marker.addEventListener('mouseenter', () => {
                    clearTimeout(timeoutId);
                    popup.style.display = 'block';
                });
                marker.addEventListener('mouseleave', () => {
                    timeoutId = setTimeout(() => {
                        popup.style.display = 'none';
                    }, 100); // Small delay before hiding
                });

                campusMap.appendChild(marker);
                campusMap.appendChild(popup);
            });
        }

        activityList.addEventListener('click', (e) => {
            const listItem = e.target.closest('li');
            if (listItem) {
                const activityId = listItem.dataset.id;
                const marker = campusMap.querySelector(`.activity-marker[data-id="${activityId}"]`);
                if (marker) {
                    // Highlight the marker on list item click
                    marker.classList.add('ring-4', 'ring-purple-500', 'ring-opacity-75');
                    setTimeout(() => {
                        marker.classList.remove('ring-4', 'ring-purple-500', 'ring-opacity-75');
                    }, 2000);
                    // Optional: Scroll map into view if marker is off-screen
                    // This is more complex if map itself is not scrollable, might need a map library
                    marker.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });

        mapImage.onload = renderMarkers;
        if (mapImage.complete) {
            renderMarkers();
        }
    </script>
</body>
</html>