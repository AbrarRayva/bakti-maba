<div class="flex justify-between items-center mb-6">
    <div>
        <h1 class="text-2xl font-bold text-gray-800">Peta Universitas Andalas</h1>
        <p class="text-gray-600">Pilih aktivitas untuk melihat lokasinya di peta.</p>
    </div>
</div>

<div class="flex flex-col md:flex-row gap-6">
    <div class="flex-grow md:w-2/3 bg-white p-4 rounded-xl shadow-md">
        <div id="campusMap" class="relative w-full h-[500px] md:h-[600px] overflow-hidden rounded-lg">
            <img src="/images/peta_unand.jpeg" alt="Peta Kampus" class="w-full h-full object-contain">
        </div>
    </div>

    <div class="md:w-1/3">
        <div class="bg-white p-4 rounded-xl shadow-md h-full">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-bold text-gray-800">Aktivitas</h2>
                <select id="sortActivity" class="text-sm border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
                    <option value="nearest" <%= currentSort === 'nearest' ? 'selected' : '' %>>Paling Dekat</option>
                    <option value="newest" <%= currentSort === 'newest' ? 'selected' : '' %>>Terbaru</option>
                </select>
            </div>
            <ul class="space-y-3 h-[550px] overflow-y-auto pr-2">
                <% if (activities && activities.length > 0) { %>
                    <% activities.forEach(activity => { %>
                        <li data-id="<%= activity.id %>" data-x="<%= activity.coords.x %>" data-y="<%= activity.coords.y %>"
                            class="activity-item bg-gray-50 p-3 rounded-lg flex items-center gap-4 cursor-pointer hover:bg-blue-100 transition-colors border-l-4 border-transparent hover:border-blue-500">
                            <div class="flex-1">
                                <p class="font-semibold text-gray-800"><%= activity.title %></p>
                                <p class="text-gray-600 text-sm"><%= new Date(activity.waktu_formatted).toLocaleString('id-ID', { dateStyle: 'long', timeStyle: 'short' }) %></p>
                            </div>
                        </li>
                    <% }); %>
                <% } else { %>
                    <li class="text-center text-gray-500 py-4">Belum ada aktivitas.</li>
                <% } %>
            </ul>
        </div>
    </div>
</div>

<style>
.activity-marker {
    position: absolute;
    width: 20px;
    height: 20px;
    background: red;
    border-radius: 50%;
    border: 2px solid white;
    transform: translate(-50%, -50%);
    transition: all 0.2s ease;
    box-shadow: 0 2px 5px rgba(0,0,0,0.4);
}
.activity-marker.highlight {
    transform: translate(-50%, -50%) scale(1.5);
    background-color: #3b82f6; /* blue-500 */
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const campusMap = document.getElementById('campusMap');
    if (!campusMap) return;

    const activities = <%- JSON.stringify(activities || []) %>;
    
    // Create markers
    activities.forEach(activity => {
        if (activity.coords && activity.coords.x && activity.coords.y) {
            const marker = document.createElement('div');
            marker.className = 'activity-marker';
            marker.style.left = `${activity.coords.x}%`;
            marker.style.top = `${activity.coords.y}%`;
            marker.dataset.id = activity.id;
            marker.title = activity.title;
            campusMap.appendChild(marker);
        }
    });

    const activityList = document.querySelector('.space-y-3');
    if (!activityList) return;

    activityList.addEventListener('click', (e) => {
        const listItem = e.target.closest('.activity-item');
        if (listItem) {
            const activityId = listItem.dataset.id;
            
            // Remove highlight from all markers and list items
            document.querySelectorAll('.activity-marker').forEach(m => m.classList.remove('highlight'));
            document.querySelectorAll('.activity-item').forEach(i => i.classList.remove('bg-blue-100', 'border-blue-500'));

            // Highlight the selected one
            const marker = campusMap.querySelector(`.activity-marker[data-id="${activityId}"]`);
            if (marker) {
                marker.classList.add('highlight');
            }
            listItem.classList.add('bg-blue-100', 'border-blue-500');
        }
    });

    const sortSelect = document.getElementById('sortActivity');
    if(sortSelect) {
        sortSelect.addEventListener('change', (e) => {
            const selectedSort = e.target.value;
            window.location.href = `/campus?sort=${selectedSort}`;
        });
    }
});
</script>